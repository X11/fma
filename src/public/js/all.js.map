{"version":3,"sources":["counter.js","danger.js","header.js","hide-more.js","hide-posters.js","hide-watched.js","jquery-exists.js","jquery.unveil.js","mark-episode.js","mark-serie.js","select-all.js","series-overview.js","tabs.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["(function() {\n    var timeout = 10;\n\n    $(document).ready(function(){\n        $('[data-counter]').each(function(){\n            var $this = $(this);\n            var countTo = $this.data('counter');\n            var time = $this.data('counterTime');\n            var cur = 0;\n            var division = time / timeout;\n            var add = Math.ceil(countTo / division);\n\n            function up() {\n                cur += add;\n                if (cur < countTo)\n                    $this.html(cur);\n                else if(cur > countTo)\n                    return $this.html(countTo);\n\n                setTimeout(up, timeout);\n            }\n            setTimeout(up, timeout);\n        });\n    });\n}());\n","$('a.is-danger').on('click', function(e) {\n    return window.confirm(\"Are you sure?\");\n});\n","(function() {\n    \"use strict\";\n\n    $(\".header-toggle\").click(function(){\n        $(this).parent().find('.header-right').toggleClass('is-active');\n    });\n\n}());\n","(function() {\n\n    \"use strict\";\n\n    var $checkbox = $('#hide-more');\n    var $posters = $('.more');\n    var checked = localStorage.getItem('hide-more-value') == \"true\";\n    $checkbox.prop('checked', checked);\n    toggleMore(checked);\n\n    $checkbox.on('change', function(e) {\n        var checked = $checkbox.prop('checked');\n        toggleMore(checked);\n        localStorage.setItem('hide-more-value', checked.toString());\n    });\n\n    function toggleMore(state) {\n        if (state)\n            $posters.hide();\n        else\n            $posters.show();\n    }\n\n}());\n","(function() {\n    \n    \"use strict\";\n\n    var checkbox = $('#hide-posters');\n    var posters = $('.serie-poster');\n    var checked = localStorage.getItem('hide-posters-value') == \"true\";\n    checkbox.prop('checked', checked);\n    togglePosters(checked);\n\n    checkbox.on('change', function(e) {\n        checked = checkbox.prop('checked');\n        togglePosters(checked);\n        localStorage.setItem('hide-posters-value', checked.toString());\n    });\n\n    function togglePosters(state) {\n        if (state)\n            posters.hide();\n        else\n            posters.show();\n    }\n\n}());\n","(function() {\n\n    \"use strict\";\n\n    var $checkbox = $('#hide-watched');\n    var $columns = $('.is-watched');\n    var checked = localStorage.getItem('hide-watched-value') == \"true\";\n    $checkbox.prop('checked', checked);\n    toggleWatched(checked);\n\n    $checkbox.on('change', function(e) {\n        var checked = $checkbox.prop('checked');\n        toggleWatched(checked);\n        localStorage.setItem('hide-watched-value', checked.toString());\n    });\n\n    function toggleWatched(state) {\n        if (state)\n            $columns.hide();\n        else\n            $columns.show();\n    }\n\n}());\n","jQuery.fn.exists = function(){return jQuery(this).length>0;};\n","/**\n * jQuery Unveil\n * A very lightweight jQuery plugin to lazy load images\n * http://luis-almeida.github.com/unveil\n *\n * Licensed under the MIT license.\n * Copyright 2013 LuÃ­s Almeida\n * https://github.com/luis-almeida\n */\n\n;(function($) {\n\n  $.fn.unveil = function(threshold, callback) {\n\n    var $w = $(window),\n        th = threshold || 0,\n        retina = window.devicePixelRatio > 1,\n        attrib = retina? \"data-src-retina\" : \"data-src\",\n        images = this,\n        loaded;\n\n    this.one(\"unveil\", function() {\n      var source = this.getAttribute(attrib);\n      source = source || this.getAttribute(\"data-src\");\n      if (source) {\n        this.setAttribute(\"src\", source);\n        if (typeof callback === \"function\") callback.call(this);\n      }\n    });\n\n    function unveil() {\n      var inview = images.filter(function() {\n        var $e = $(this);\n        if ($e.is(\":hidden\")) return;\n\n        var wt = $w.scrollTop(),\n            wb = wt + $w.height(),\n            et = $e.offset().top,\n            eb = et + $e.height();\n\n        return eb >= wt - th && et <= wb + th;\n      });\n\n      loaded = inview.trigger(\"unveil\");\n      images = images.not(loaded);\n    }\n\n    $w.on(\"scroll.unveil resize.unveil lookup.unveil\", unveil);\n\n    unveil();\n\n    return this;\n\n  };\n\n})(window.jQuery || window.Zepto);\n","(function() {\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n    function setEpisodeMark(watched, id){\n        $.ajax({\n            url: \"/episode/\" + id + '/watched?_token=' + token,\n            cache: false,\n            method: watched ? 'POST' : 'DELETE',\n            json: true,\n            success: function(res){\n                //alert(res.status);\n                $.notify(res.status, \"success\");\n            }\n        });\n    }\n\n    $('.mark-episode').each(function(){\n        var $button = $(this);\n        var initial = $(this).data('watchedInitial');\n        var content = $(this).data('watchedContent').split('|');\n        var classes = $(this).data('watchedClass').split('|');\n        var episode = $(this).data('watchedEpisode');\n        var season = $(this).data('watchedSeason');\n\n        var state = initial ? 1 : 0;\n        $button.html(content[state]);\n        $button.removeClass('is-loading');\n        $button.addClass(classes[state]);\n\n        $button.click(function(){\n            $button.removeClass(classes[state]);\n            state = state === 0 ? 1 : 0;\n            setEpisodeMark(state, episode);\n            $button.html(content[state]);\n            $button.addClass(classes[state]);\n            return false;\n        });\n    });\n\n    $('.mark-season').each(function(){\n        var $button = $(this);\n        var season = $(this).data('watchedSeason');\n\n        $button.click(function(){\n            var i = 0;\n            $('.mark-episode[data-watched-season=\"' + season + '\"]').each(function(){\n                var $but = $(this);\n                setTimeout(function(){\n                    $but.click();\n                }, 100*i);\n                i++;\n            });\n        });\n    });\n}());\n","(function() {\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n    function setSerieMark(state, id){\n        $.ajax({\n            url: \"/watchlist/\" + id + '?_token=' + token,\n            cache: false,\n            method: state ? 'POST' : 'DELETE',\n            json: true,\n            success: function(res){\n                //alert(res.status);\n                $.notify(res.status, \"success\");\n            }\n        });\n    }\n\n    $('.mark-serie').each(function(){\n        var $button = $(this);\n        var initial = $(this).data('markInitial');\n        var content = $(this).data('markContent').split('|');\n        var classes = $(this).data('markClass').split('|');\n        var serie = $(this).data('markSerie');\n\n        var state = initial ? 1 : 0;\n        $button.html(content[state]);\n        $button.removeClass('is-loading');\n        $button.addClass(classes[state]);\n\n        $button.click(function(){\n            $button.removeClass(classes[state]);\n            state = state === 0 ? 1 : 0;\n            setSerieMark(state, serie);\n            $button.html(content[state]);\n            $button.addClass(classes[state]);\n            return false;\n        });\n    });\n}());\n","(function() {\n\n    \"use strict\";\n\n    $(\"#selectAll\").click(function(){\n        var checked = $(this).prop('checked');\n        $(this).parents('form').find('input[type=\"checkbox\"]').each(function(){\n            $(this).prop('checked', checked);\n        });\n    });\n    \n}());\n","(function() {\n    \n    \"use strict\";\n\n    var $overview = $('.series');\n    var $series = $('.serie');\n\n    $series.hover(function(e){\n        $(this).addClass('selected');\n        $overview.addClass('darken');\n    }, function(e) {\n        $(this).removeClass('selected');\n        $overview.removeClass('darken');\n    });\n\n}());\n","// Setup all listeners\n$('.tabs a[tab-href]').on('click', function() {\n    // Split the target to get the main & sub id\n    var target = $(this).attr('tab-href');\n    var parts = target.split('/');\n\n    // Find the good tab\n    $('#'+ parts[0] + '> *').each(function(){\n        var c = $(this);\n        c.removeClass('is-active');\n        if (parts[1] == c.attr('tab-id')) c.addClass('is-active');\n    });\n\n    // Remove all active\n    $(this).parents('ul').find('li').each(function(){\n        $(this).removeClass('is-active');\n    });\n\n    // Set active to the good one\n    $(this).parent('li').addClass('is-active');\n\n    history.replaceState(parts, \"\", '#' + target);\n});\n\nwindow.addEventListener('load', function(e) {\n    var hash = location.hash.slice(1);\n    $('[tab-href=\"' + hash + '\"]').click();\n});\n"],"sourceRoot":"/source/"}