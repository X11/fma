{"version":3,"sources":["jquery.check.js","jquery.exists.js","jquery.request.js","jquery.switch.js","jquery.unveil.js","Creator.js","Creator.controller.js","Creator.trigger.js","controllers/Controllers.js","controllers/HeaderController.js","controllers/SerieController.js","controllers/SeriesController.js","controllers/SourcesController.js","controllers/WatchlistController.js","elements/checkboxes.js","elements/danger.js","elements/mark-buttons.js","elements/tabs.js","elements/tvdb-hd.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACznfile":"all.js","sourcesContent":[";(function($) {\n\n    \"use strict\";\n\n    $.fn.check = function(key, trueState, falseState){\n\n        var $checkbox = $(this);\n        var checked = localStorage.getItem(key) == \"true\";\n\n        var checkSwitch = $.switch(trueState, falseState);\n        checkSwitch.set(checked);\n        $checkbox.attr('checked', checked);\n\n        $checkbox.on('change', function(e) {\n            var checked = $checkbox.prop('checked');\n            localStorage.setItem(key, checked.toString());\n            checkSwitch.set(checked);\n        });\n\n        return this;\n    };\n\n})(window.jQuery || window.Zepto);\n","jQuery.fn.exists = function(){return jQuery(this).length>0;};\n",";(function($) {\n\n    \"use strict\";\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n    $.request = function(method, url, data, success, error) {\n        return $.ajax({\n                    url: url + (url.search('&') === -1 ? '?' : '&') + '_token=' + token,\n                    cache: false,\n                    method: method,\n                    contentType: 'application/json; charset=utf-8',\n                    dataType: 'json',\n                    json: true,\n                    data: data || '',\n                    success: success,\n                    error: error\n                });\n    };\n\n})(window.jQuery || window.Zepto);\n",";(function($) {\n\n    \"use strict\";\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n    $.switch = function(trueState, falseState, state) {\n        return {\n            state: state || false,\n            get: function(state){\n                return this.state;\n            },\n            set: function(state){\n                this.state = state;\n                if (state){\n                    this.trueState();\n                } else {\n                    this.falseState();\n                }\n            },\n            trueState: trueState || function(){},\n            falseState: falseState || function(){}\n        };\n\n    };\n\n})(window.jQuery || window.Zepto);\n","/**\n * jQuery Unveil\n * A very lightweight jQuery plugin to lazy load images\n * http://luis-almeida.github.com/unveil\n *\n * Licensed under the MIT license.\n * Copyright 2013 LuÃ­s Almeida\n * https://github.com/luis-almeida\n */\n\n;(function($) {\n\n  $.fn.unveil = function(threshold, callback) {\n\n    var $w = $(window),\n        th = threshold || 0,\n        retina = window.devicePixelRatio > 1,\n        attrib = retina? \"data-src-retina\" : \"data-src\",\n        images = this,\n        loaded;\n\n        this.one(\"unveil\", function() {\n            var source = this.getAttribute(attrib);\n            source = source || this.getAttribute(\"data-src\");\n            if (source) {\n                if (source.slice(0, 2) == \"//\" && this.nodeName == \"IMG\"){\n                    var img = new Image();\n                    img.src = \"https:\" + source;\n                    img.onload = function(){\n                        this.setAttribute('src', \"https:\" + source);\n                    }.bind(this);\n                    img.onerror = function(){\n                        this.setAttribute('src', \"http:\" + source);\n                    }.bind(this);\n                } else {\n                    this.setAttribute(\"src\", source);\n                }\n                if (typeof callback === \"function\") callback.call(this);\n            }\n        });\n\n    function unveil() {\n      var inview = images.filter(function() {\n        var $e = $(this);\n        if ($e.is(\":hidden\")) return;\n\n        var wt = $w.scrollTop(),\n            wb = wt + $w.height(),\n            et = $e.offset().top,\n            eb = et + $e.height();\n\n        return eb >= wt - th && et <= wb + th;\n      });\n\n      loaded = inview.trigger(\"unveil\");\n      images = images.not(loaded);\n    }\n\n    $w.on(\"scroll.unveil resize.unveil lookup.unveil\", unveil);\n\n    unveil();\n\n    return this;\n\n  };\n\n})(window.jQuery || window.Zepto);\n","var Creator = {};\n","/**\n * Creates a new controller given an data set of elements, events and functions\n *\n * Example controller\n * {\n *      elements: {\n *          \"#button\": \"$button\",\n *          \".buttons\": \"$buttons\"\n *      },\n *      events: {\n *          \"$button\": {\n *              click: function(){},\n *          }\n *      },\n *      init: function(){},\n *      customSuff: function(){}\n * }\n *\n * @param Object\n *\n * @return Object\n */\nCreator.controller = function(options){\n\n    // Initialize the controller\n    var Controller = function(){\n        this.options = options;\n\n        if(this.elements) this._refreshElements();\n\n        this.init.apply(this, arguments);\n    };\n\n    // Shorter name for working on the prototype;\n    Controller.fn = Controller.prototype;\n    Controller.fn.elements = {};\n\n    // Default init function does nothing, Can be overwriten by giving an 'init' property with the options;\n    Controller.fn.init = function(){};\n\n    // Shorten the search area for selectors;\n    Controller.fn.$ = function(selector){\n        return $(selector, this.el);\n    };\n\n    // Populates the elements from the options\n    Controller.fn._refreshElements = function(){\n        for (var key in this.elements){\n            // Bind the element to the controller\n            this[this.elements[key]] = this.$(key);\n\n            // Do we have events for this element?\n            if (this.events && this.events[this.elements[key]]){\n\n                // Add the events for the element\n                for (var event in this.events[this.elements[key]]){\n                    this[this.elements[key]].on(event, this.events[this.elements[key]][event].bind(this));\n                }\n            }\n        }\n    };\n\n    // Include all of the options into the new controller\n    if (options){\n        for (var key in options){\n            Controller.fn[key] = options[key];\n        }\n    }\n\n    return Controller;\n};\n","/**\n * Creates an trigger when a specific elements gets loaded into the DOM\n *\n * @param Object\n *\n * @return Object\n */\nCreator.trigger = function(options){\n\n    var Trigger = function(){\n        this.options = options;\n\n        Triggers.register(this.options.id, this.options.on.bind(this));\n\n        this.init.apply(this, arguments);\n    };\n\n    // Shorter name for working on the prototype;\n    Trigger.fn = Trigger.prototype;\n\n    // Default init function does nothing, Can be overwriten by giving an 'init' property with the options;\n    Trigger.fn.init = function(){};\n\n    // Default do nothing\n    Trigger.fn.on = function(){};\n\n    Trigger.fn.done = false;\n\n    if (options){\n        for (var key in options){\n            Trigger.fn[key] = options[key];\n        }\n    }\n\n    return (new Trigger(options));\n};\n\n\n/**\n * Holds all the triggers\n *\n */\nvar Triggers = {\n\n    /**\n     * Holds all the triggers\n     *\n     * @var Object\n     */\n    triggers: {},\n\n    /**\n     * Register an trigger with a callback\n     *\n     * @param string\n     * @param Function\n     */\n    register: function(id, cb){\n        this.triggers[id] = cb;  \n    },\n\n    /**\n     * Remove an trigger\n     *\n     * @param string\n     */\n    unregister: function(id){\n        delete this.triggers[id];\n    },\n\n    /**\n     * Executes a trigger\n     *\n     * @param string\n     */\n    execute: function(id){\n        if (this.triggers[id]){\n            this.triggers[id]();\n        }\n    },\n\n    /**\n     * Shortname for execute\n     *\n     * @param string\n     */\n    exec: function(id){\n        this.execute(id);\n    },\n\n    /**\n     * Listens for events when to check for triggers\n     */\n    listen: function(){\n        window.addEventListener('load', this.checkTriggers.bind(this));\n    },\n\n    /**\n     * Handle the triggers\n     */\n    checkTriggers: function(){\n        var self = this;\n        $('[triggers]').each(function(){\n            var id = $(this).attr('triggers');\n            self.execute(id);\n            self.unregister(id);\n        });\n    }\n};\n\n// Bootstrap\nTriggers.listen();\n","var Controllers = {};\n","Controllers.HeaderController = Creator.controller({\n    elements: {\n        '#header': 'el',\n        '.nav-toggle': '$navToggle',\n        '.nav-menu': '$navMenu',\n    },\n    events: {\n        '$navToggle': {\n            click: function(){\n                this.$navMenu.toggleClass('is-active');\n            }\n        }\n    },\n    init: function(){\n        this.oldPos = 0;\n        $(window).on('scroll', this.onScroll.bind(this));\n    },\n    onScroll: function(e){\n        if (this.oldPos < e.originalEvent.pageY && e.originalEvent.pageY > 100){\n            this.el.addClass('hide');\n        } else {\n            this.el.removeClass('hide');\n        }\n        this.oldPos = e.originalEvent.pageY;\n    }\n});\n","Controllers.SerieController = new Creator.controller({\n    elements: {\n        \".serie-fanart img\": \"$fanartImage\",\n        \".serie-poster img\": \"$posterImage\",\n        \".videos .overlay\": \"$videoOverlays\",\n    },\n\n    events: {\n        \"$fanartImage\": {\n            dblclick: function(){\n                this.imageModal(this.$fanartImage);\n            }\n        },\n        \"$posterImage\": {\n            dblclick: function(){\n                this.imageModal(this.$posterImage);\n            }\n        },\n        \"$videoOverlays\": {\n            click: function(e){\n                var $modal = $('#video-modal');\n                $modal.addClass('is-active');\n\n                var $frame = $modal.find('iframe');\n                $frame.attr('src', $(e.currentTarget).attr('iframe-src'));\n\n                $modal.find('.modal-close').one('click', function(){\n                    $modal.removeClass('is-active');\n                    $frame.attr('src', '');\n                });\n            }\n        }\n    },\n\n    init: function(){\n\n    },\n\n    imageModal: function(clickSource){\n        var $modal = $('#image-modal');\n        $modal.addClass('is-active');\n\n        var $img = $modal.find('img');\n        $img.attr('src', clickSource.attr('src'));\n\n        $modal.find('.modal-close').one('click', function(){\n            $modal.removeClass('is-active');\n        });\n\n        $modal.find('.modal-prev').on('click', prev); function prev() { setNumber(-1); }\n        $modal.find('.modal-next').on('click', next); function next() { setNumber(1); }\n\n        var $testImg = new Image();\n        $testImg.onerror = function(){\n            $img.attr('src', $testImg.src);\n            $img.show();\n        };\n        $testImg.onload = function(){\n            $img.attr('src', $testImg.src);\n            $img.show();\n        };\n\n        function setNumber(add) {\n            var src = $img.attr('src');\n            var matches = /([\\d]+)\\.jpg$/.exec(src);\n            if (matches){\n                if (matches[1] == '1' && add == -1) return;\n                $testImg.src = src.replace('-' + matches[1] + '.jpg', '-' + (add + parseInt(matches[1])) + '.jpg');\n                $img.hide();\n            }\n        }\n    },\n});\n","Controllers.SeriesController = new Creator.controller({\n    elements: {\n        \".series\": \"$overview\",\n        \".series .serie\": \"$series\"\n    },\n    events: {\n        \"$overview\": {\n            mouseover: function(){\n                this.$series.addClass('selected');\n                this.$overview.addClass('darken');\n            },\n            mouseout: function(){\n                this.$series.removeClass('selected');\n                this.$overview.removeClass('darken');\n            }\n        },\n    },\n    init: function(){},\n});\n","Controllers.SourcesController = new Creator.controller({\n    elements: {\n        \"#linkList\": \"$linkList\",\n        \"#linkTemplate\": \"$linkTemplate\",\n        \"#linkItemTemplate\": \"$linkItemTemplate\",\n        \"#magnetList\": \"$magnetList\",\n        \"#magnetTemplate\": \"$magnetTemplate\",\n        \".sources-loading\": \"$sourcesLoading\",\n    },\n\n    events: {\n\n    },\n\n    init: function() {\n        $.request('GET',\n            '/episode/' + window.episodeId + '/sources' + window.location.search,\n            null,\n            function(data) {\n                this.$sourcesLoading.hide();\n                this.renderMagnets(data.magnets);\n                this.renderLinks(data.links);\n            }.bind(this),\n            function(data) {\n                console.log(\"Something went wrong\");\n                $.notify(\"Something went wrong loading the sources\", \"error\");\n            }.bind(this)\n        );\n    },\n\n    renderMagnets: function(magnets) {\n        if (magnets.length > 0) {\n            var template = this.$magnetTemplate.html();\n            magnets.map(function(magnet) {\n                magnet.seeds = magnet.seeds > 9999 ? (Math.round(magnet.seeds / 1000)) + 'K+' : magnet.seeds;\n                return magnet;\n            }).forEach(function(magnet) {\n                var item = template;\n                for (var key in magnet) {\n                    item = item.replace((new RegExp('__' + key + '__', 'g')), magnet[key]);\n                }\n                this.$magnetList.append(item);\n            }.bind(this));\n        } else {\n            this.$magnetList.html('No magnets found');\n        }\n    },\n\n    renderLinks: function(links) {\n        if (Object.keys(links).length > 0) {\n            var template = this.$linkTemplate.html();\n            var itemtemplate = this.$linkItemTemplate.html();\n            for (var key in links) {\n                (function(links, key){ // jshint ignore:line\n                    var item = template;\n                    item = item.replace((new RegExp('__key__', 'g')), key);\n                    var items = \"\";\n                    links.forEach(function(link){\n                        var item = itemtemplate;\n                        for (var key in link) {\n                            item = item.replace((new RegExp('__' + key + '__', 'g')), link[key]);\n                        }\n                        items += item;\n                    });\n                    item = item.replace((new RegExp('__list__', 'g')), items);\n                    this.$linkList.append(item);\n                }.bind(this))(links[key], key);\n            }\n        } else {\n            this.$linkList.html('No Links found');\n        }\n    }\n});\n","Controllers.WatchlistController = new Creator.controller({\n    elements: {\n        \"#watchlist_filter_search_style\": \"$style\",\n        \"#watchlist_filter_search\": \"$search\",\n        \"[watchlist-reset-filters]\": \"$resetFilters\",\n        \"[watchlist-filter]\": \"$filters\"\n    },\n\n    events: {\n        \"$search\": {\n            keyup: function(){\n                if (this.$search.val() === ''){\n                    this.$style.html('');\n                    localStorage.setItem('watchlist_filter_search', '');\n                } else {\n                    this.$style.html('[watchlist-serie]{display:none;}[watchlist-serie*=\"' + this.$search.val() + '\"]{display:block;}');\n                    localStorage.setItem('watchlist_filter_search', this.$search.val());\n                }\n            }\n        },\n        \"$resetFilters\": {\n            click: function(){\n                this.$filters.each(function(){\n                    $(this).prop('checked', 'true');\n                });\n                this.updateFilters([]);\n            }\n        },\n        \"$filters\": {\n            change: function(){\n                var filters = [];\n                this.$filters.each(function(){\n                    var $checkbox = $(this);\n                    var checked = $checkbox.prop('checked');\n                    if (!checked){\n                        filters.push(parseInt($checkbox.attr('watchlist-filter')));\n                    }\n                });\n\n                this.updateFilters(filters);\n            }\n        }\n    },\n\n    init: function(){\n        var value = localStorage.getItem('watchlist_filter_search') || '';\n        if (value !== '') this.$style.html('[watchlist-serie]{display:none;}[watchlist-serie*=\"' + value + '\"]{display:block;}');\n        this.$search.val(value);\n    },\n\n    updateFilters: function(filters){\n        $.request(  \"POST\", \n                    '/account/settings', \n                    JSON.stringify({\n                        watchlist_filters: filters\n                    }), function(res){\n                        location.reload();\n                    }, function(res){\n                        $.notify(\"Something went wrong\", \"error\");\n                    });\n    }\n});\n","(function() {\n\n    \"use strict\";\n\n    /**\n     * Homepage\n     *\n     */\n    $('#hide-watched').check('hide-watched-value', function(){\n        $('.is-watched').hide();\n    }, function(){\n        $('.is-watched').show();\n    });\n\n    /**\n     * Calendar\n     *\n     */\n    $(\"#show-important\").check('calendar-show-special', function(){\n        $('.calendar-item:not(.is-watching):not(.is-premier):not(.is-returning)').addClass('is-hidden');\n    }, function(){\n        $('.calendar-item').removeClass('is-hidden');\n    });\n\n}());\n","(function() {\n\n    /**\n     * Add an extra confirmation box on danger buttons\n     *\n     */\n    $('a.is-danger, button.is-danger').on('click', function(e) {\n        return window.confirm(\"Are you sure?\");\n    });\n}());\n","(function() {\n\n    \"use strict\";\n\n    /**\n     * Toggle tracking state from series\n     *\n     */\n    $('.mark-serie').each(function(){\n        var $button = $(this);\n        var initial = $(this).data('markInitial');\n        var content = $(this).data('markContent').split('|');\n        var classes = $(this).data('markClass').split('|');\n        var id = $(this).data('markSerie');\n\n        var stateSwitch = $.switch(function(){\n                                        $button.removeClass(classes[0]);\n                                        $button.html(content[1]);\n                                        $button.addClass(classes[1]);\n\n                                        $.request('POST', '/serie/' + id + '/track', null, function(res){\n                                            $.notify(res.status, \"success\");\n                                        });\n                                    }, function(){\n                                        $button.removeClass(classes[1]);\n                                        $button.html(content[0]);\n                                        $button.addClass(classes[0]);\n\n                                        $.request('DELETE', '/serie/' + id + '/track', null, function(res){\n                                            $.notify(res.status, \"success\");\n                                        });\n                                    }, initial ? true : false);\n\n        $button.removeClass('is-loading');\n        var i = initial ? 1 : 0;\n        $button.html(content[i]);\n        $button.addClass(classes[i]);\n\n        $button.click(function(){\n            stateSwitch.set(!stateSwitch.get());\n            return false;\n        });\n    });\n\n\n    /**\n     * Mark episode as watched\n     *\n     */\n    $('.mark-episode').each(function(){\n\n        var $button = $(this);\n        var $container = $button;\n\n        var initial = $(this).data('watchedInitial');\n        var content = $(this).data('watchedContent');\n        if (content) content = content.split('|');\n\n        var classes = $(this).data('watchedClass').split('|');\n        var episode = $(this).data('watchedEpisode');\n        var season = $(this).data('watchedSeason');\n\n        var parent = $(this).data('watchedParent');\n        if (parent) $container = $button.closest(parent);\n\n        var stateSwitch = $.switch(function(){\n                                        $container.removeClass(classes[0]);\n                                        if (content) $container.html(content[1]);\n                                        $container.addClass(classes[1]);\n\n                                        $.request('POST', '/episode/' + episode + '/watched', null, function(res){\n                                            $.notify(res.status, \"success\");\n                                        });\n                                    }, function(){\n                                        $container.removeClass(classes[1]);\n                                        if (content) $container.html(content[0]);\n                                        $container.addClass(classes[0]);\n\n                                        $.request('DELETE', '/episode/' + episode + '/watched', null, function(res){\n                                            $.notify(res.status, \"success\");\n                                        });\n                                    }, initial ? true : false);\n\n        $button.removeClass('is-loading');\n        var i = initial ? 1 : 0;\n        if (content) $container.html(content[i]);\n        $container.addClass(classes[i]);\n\n        $button.click(function(){\n            stateSwitch.set(!stateSwitch.get());\n            return false;\n        });\n    });\n\n    /**\n     * Mark season as watched\n     *\n     */\n    $('.mark-season').each(function(){\n        var $button = $(this);\n        var season = $(this).data('watchedSeason');\n\n        $button.click(function(){\n            var i = 0;\n            $('.is-aired .mark-episode[data-watched-season=\"' + season + '\"]').each(function(){\n                var $but = $(this);\n                setTimeout(function(){\n                    $but.click();\n                }, 100*i);\n                i++;\n            });\n        });\n    });\n\n}());\n","(function() {\n    // Setup all listeners\n    $('.tabs a[tab-href]').on('click', function() {\n        // Split the target to get the main & sub id\n        var target = $(this).attr('tab-href');\n        var parts = target.split('/');\n\n        // Find the good tab\n        $('#'+ parts[0] + '> *').each(function(){\n            var c = $(this);\n            c.removeClass('is-active');\n            if (parts[1] == c.attr('tab-id')) c.addClass('is-active');\n        });\n\n        // Remove all active\n        $(this).parents('ul').find('li').each(function(){\n            $(this).removeClass('is-active');\n        });\n\n        // Set active to the good one\n        $(this).parent('li').addClass('is-active');\n\n        history.replaceState(parts, \"\", '#' + target);\n    });\n\n    window.addEventListener('load', function(e) {\n        var hash = location.hash.slice(1);\n        $('[tab-href=\"' + hash + '\"]').click();\n    });\n}());\n","(function() {\n\n    var IMAGE_URL = \"//thetvdb.com/banners/\";\n    var IMAGE_CACHE_URL = \"//thetvdb.com/banners/_cache/\";\n    var check;\n    switch(window.tvdb_load_hd){\n        case 'not_on_mobile':\n            check = function(){\n                return !(/Mobi/i.test(navigator.userAgent));\n            };\n            break;\n        case 'size':\n            check = function(element){\n                return element.width() >= 300;\n            };\n            break;\n        case 'always':\n            check = function(){return true;};\n            break;\n        default:\n            check = function(){return false;};\n    }\n\n    $('img[data-src^=\"' + IMAGE_CACHE_URL + '\"]').on('load', function(){\n        var elm = $(this);\n        var src = elm.attr('src');\n\n        src = src.slice(0, 5) === \"https\" ? src.slice(6) : src.slice(5);\n        if (src.slice(0, IMAGE_CACHE_URL.length) == IMAGE_CACHE_URL){\n            if (check(elm)){\n                var after = src.slice(IMAGE_CACHE_URL.length);\n\n                var img = new Image();\n                img.src = \"https:\" + IMAGE_URL + after;\n                img.onload = function(){\n                    elm[0].src = this.getAttribute('src');\n                    //console.log(\"Loaded HD\", this.getAttribute('src'));\n                };\n                img.onerror = function(){\n                    img.src = \"http:\" + IMAGE_URL + after;\n                };\n            }\n        }\n    });\n}());\n","(function() {\n\n    \"use strict\";\n\n    Creator.trigger({\n        id: 'initHeader',\n        on: function() {\n            new Controllers.HeaderController();\n        }\n    });\n\n    Creator.trigger({\n        id: 'initSerie',\n        on: function() {\n            new Controllers.SerieController();\n        }\n    });\n\n    Creator.trigger({\n        id: 'initEpisode',\n        on: function() {\n\n        }\n    });\n\n    Creator.trigger({\n        id: 'initSeries',\n        on: function() {\n            new Controllers.SeriesController();\n        }\n    });\n\n    Creator.trigger({\n        id: 'initWatchlist',\n        on: function() {\n            new Controllers.WatchlistController();\n        }\n    });\n\n    Creator.trigger({\n        id: 'initSources',\n        on: function() {\n            new Controllers.SourcesController();\n        }\n    });\n}());\n"],"sourceRoot":"/source/"}